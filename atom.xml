<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>rhine(黎磊)</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-03T09:08:59.669Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>rhine(黎磊)</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android的消息机制-Handler</title>
    <link href="http://yoursite.com/2019/10/03/Android%E7%9A%84%E6%B6%88%E6%81%AF%E6%9C%BA%E5%88%B6-Handler/"/>
    <id>http://yoursite.com/2019/10/03/Android的消息机制-Handler/</id>
    <published>2019-10-03T09:04:56.000Z</published>
    <updated>2019-10-03T09:08:59.669Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;为了更好的理解 Looper 的工作原理，我们需要对 ThreadLocal 进行了解，如果对 ThreadLocal 没有了解的童鞋，可以参看  &lt;a href=&quot;https://www.jianshu.com/p/0ba78fe61c40&quot;
        
      
    
    </summary>
    
    
      <category term="Android系列" scheme="http://yoursite.com/categories/Android%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Framework" scheme="http://yoursite.com/tags/Framework/"/>
    
  </entry>
  
  <entry>
    <title>View 的事件分发拦截机制</title>
    <link href="http://yoursite.com/2019/10/03/View%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E6%8B%A6%E6%88%AA%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2019/10/03/View的事件分发拦截机制/</id>
    <published>2019-10-03T09:02:01.000Z</published>
    <updated>2019-10-03T09:04:13.915Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这一个知识点也是写烂了的，可是作为 Android 开发者又不得不学习这部分，学习了呢，总觉得要写点东西出来才觉得有感觉，得，就有这一篇文章了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;API 27&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;流程介绍&quot;&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="Android系列" scheme="http://yoursite.com/categories/Android%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Framework" scheme="http://yoursite.com/tags/Framework/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/10/02/hello-world/"/>
    <id>http://yoursite.com/2019/10/02/hello-world/</id>
    <published>2019-10-02T05:14:00.000Z</published>
    <updated>2019-10-02T13:56:15.758Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>ThreadLocal 原理</title>
    <link href="http://yoursite.com/2018/07/24/ThreadLocal%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2018/07/24/ThreadLocal原理/</id>
    <published>2018-07-23T17:43:42.000Z</published>
    <updated>2019-10-02T15:12:12.714Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;总述&quot;&gt;&lt;a href=&quot;#总述&quot; class=&quot;headerlink&quot; title=&quot;总述&quot;&gt;&lt;/a&gt;总述&lt;/h1&gt;&lt;p&gt;ThreadLocal 在面试中经常提到，关于ThreadLocal使用不当造成OOM以及在特殊场景下，通过ThreadLocal可以轻松实现一些看起来复杂的功能，都说明值得花时间研究其原理。&lt;/p&gt;
&lt;p&gt;ThreadLocal 不是 Thread，是一个&lt;strong&gt;线程内部的数据存储类&lt;/strong&gt;，通过它可以在指定的线程中存储数据，&lt;strong&gt;对数据存储后，只有在线程中才可以获取到存储的数据，对于其他线程来说是无法获取到数据。&lt;/strong&gt;可能这才是Local的真正含义吧。&lt;br&gt;
    
    </summary>
    
    
      <category term="Android系列" scheme="http://yoursite.com/categories/Android%E7%B3%BB%E5%88%97/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="ThreadLocal" scheme="http://yoursite.com/tags/ThreadLocal/"/>
    
  </entry>
  
</feed>
